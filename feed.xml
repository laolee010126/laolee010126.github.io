<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://laolee010126.github.io/</id><title>Laolee</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-06-11T02:26:21+08:00</updated> <author> <name>LEE SEONGJUN</name> <uri>https://laolee010126.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://laolee010126.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://laolee010126.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 LEE SEONGJUN </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Test</title><link href="https://laolee010126.github.io/posts/test/" rel="alternate" type="text/html" title="Test" /><published>2022-05-27T00:00:00+08:00</published> <updated>2022-05-27T00:00:00+08:00</updated> <id>https://laolee010126.github.io/posts/test/</id> <content src="https://laolee010126.github.io/posts/test/" /> <author> <name>LEE SEONGJUN</name> </author> <summary> 2000094805-李成俊 练习题 1. 因为 JAVA 只允许使用布尔型，跟 C++的非零即真更加靠谱，安全。 作业 1 k = (j + 13) / 27 while k &amp;gt; 10: k += 1 i = 3 * k - 1 k = (j + 13) / 27; while(k &amp;lt;= 10) { k++; i = 3 * k - 1; } k = (j + 13) / 27; for k &amp;lt; 10 { k++ i = 3 * k - 1 } 我觉得三种语言的可读性可写性都不错。 作业 3 switch(k) { case (k == 1) || (k == 2): j = 2 * k - 1; break; case (k == 3) || (k == 5)... </summary> </entry> <entry><title>C++ 알고리즘 풀이</title><link href="https://laolee010126.github.io/posts/algorithm/" rel="alternate" type="text/html" title="C++ 알고리즘 풀이" /><published>2022-05-20T00:00:00+08:00</published> <updated>2022-05-20T00:00:00+08:00</updated> <id>https://laolee010126.github.io/posts/algorithm/</id> <content src="https://laolee010126.github.io/posts/algorithm/" /> <author> <name>LEE SEONGJUN</name> </author> <category term="algorithm" /> <summary> POJ1013 称硬币 </summary> </entry> <entry><title>程序设计语言概论5 - 200094805</title><link href="https://laolee010126.github.io/posts/test/" rel="alternate" type="text/html" title="程序设计语言概论5 - 200094805" /><published>2022-05-12T00:00:00+08:00</published> <updated>2022-05-12T00:00:00+08:00</updated> <id>https://laolee010126.github.io/posts/test/</id> <content src="https://laolee010126.github.io/posts/test/" /> <author> <name>LEE SEONGJUN</name> </author> <category term="程序设计语言概论" /> <summary> 作业 Write a function reverse which can reverse the elements of a [ ]int slice. It may be applied to slices of any length. func reverse(arr []int) { l := len(arr) for i := 0; i &amp;lt; l/2; i++ { j := l - 1 - i arr[i], arr[j] = arr[j], arr[i] } } Rewrite reverse to use an array pointer instead of a slice. func reverse(arr *[]int) { l := len(arr) for i := 0; i &amp;lt; l/2; i++ { j := l -... </summary> </entry> <entry><title>책임에 대한 생각</title><link href="https://laolee010126.github.io/posts/responsibility/" rel="alternate" type="text/html" title="책임에 대한 생각" /><published>2022-04-16T00:00:00+08:00</published> <updated>2022-04-16T00:00:00+08:00</updated> <id>https://laolee010126.github.io/posts/responsibility/</id> <content src="https://laolee010126.github.io/posts/responsibility/" /> <author> <name>LEE SEONGJUN</name> </author> <category term="생각" /> <category term="정의" /> <summary> 책임 나는 왜 갑자기 책임에 대해 생각하나? 요즘 올웨이즈라는 회사를 찾아보고있었다. 올웨이즈는 가파르게 성정하고 있는 이커머스 스타트업이고, 돈 벌기에 관심 있는 나는 늘 그래왔듯이 올웨이즈라는 사업에 관심이 생겼다. 그러던중 올웨이즈의 채용 설명회를 보게 되었는데, 그 회사 대표가 “7 Standards” 를 만족하는 사람을 찾는다는 말을 했다. &amp;lt;/br&amp;gt; &amp;lt;/br&amp;gt; 7Standards 는 Super High Goal :저희는 글로벌 리테일 시장에서의 비효율을 해결하고 아마존을 넘는 이커머스 기업을 만들어나가고자 합니다. 이러한 목표에 진심으로 가슴이 뛰는 팀원과 함께하고 싶습니다. Super Fast :올웨이즈의 폭발적인 성장 속도에 발 맞출 수 있는... </summary> </entry> <entry><title>C++ STL</title><link href="https://laolee010126.github.io/posts/STL1/" rel="alternate" type="text/html" title="C++ STL" /><published>2022-04-11T00:00:00+08:00</published> <updated>2022-04-11T00:00:00+08:00</updated> <id>https://laolee010126.github.io/posts/STL1/</id> <content src="https://laolee010126.github.io/posts/STL1/" /> <author> <name>LEE SEONGJUN</name> </author> <category term="C++" /> <summary> C++ STL STL 개념 C++ 의 핵심 - 重用 重用 OOP: 继承, 多态, 标准类库(함수, 자료구조, 알고리즘, 네트워크 등) 제네릭 프로그래밍: 템플릿 방식, STL 제네릭 프로그래밍 설계 템플릿을 이용해서 자주 쓰는 자료구조와 알고리즘을 class로 정의 -&amp;gt; 자료구조와 알고리즘을 다시 정의 할 필요가 없음 STL STL: 자주쓰는 자료구조와 알고리즘의 모음 STL중 기본개념 컨테이너: 각종 데이터타입을 담을 수 있는 자료구조 이터레이터: 순서대로 컨테이너안의 원소를 넣고 뺄수 있는 도구 (C++에서 포인터는 보통 이터레이터임) 알고리즘: 컨테이너에 동작하는 함수 STL 컨테이너 크게 3가지 종류로 분류 시퀀스 컨테이너 - vector... </summary> </entry> </feed>
